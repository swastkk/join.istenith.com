# Generated by Django 4.0.8 on 2022-12-10 22:17

import django.core.files.storage
import django.core.validators
from django.db import migrations, models
import forms.models
import pathlib
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(blank=True, max_length=1000, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
                ('css_class_for_active_QNO', models.CharField(blank=True, default='c-faq--active', max_length=40, null=True)),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
            },
        ),
        migrations.CreateModel(
            name='FormPlaceholder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_input', models.CharField(max_length=100)),
                ('email_input', models.CharField(max_length=100)),
                ('phone_number_input', models.CharField(max_length=100)),
                ('cv_upload_input', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Form Placeholder',
                'verbose_name_plural': 'Form Placeholders',
            },
        ),
        migrations.CreateModel(
            name='Registeration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.RegexValidator(message='Only freshers with correct college email addresses are authorised.', regex='^[2][2][a-zA-Z]{3}\\d{3}@nith[.]ac[.]in$')])),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('branch', models.CharField(choices=[('', 'Choose Your Branch'), ('Civil Engineering', 'Civil Engineering'), ('Mechanical Engineering', 'Mechanical Engineering'), ('Electrical Engineering', 'Electrical Engineering'), ('Electronics And Communication Engineering', 'Electronics And Communication Engineering'), ('ECE Dual', 'ECE Dual'), ('Chemical Engineering', 'Chemical Engineering'), ('Computer Science Engineering', 'Computer Science Engineering'), ('CSE Dual', 'CSE Dual'), ('Material Science', 'Material Science'), ('Engineering Physics', 'Engineering Physics'), ('Mathematics And Computing', 'Mathematics And Computing')], default='', max_length=100)),
                ('resume', models.FileField(blank=True, default='settings.MEDIA_ROOT/resumes/resume.pdf', null=True, storage=django.core.files.storage.FileSystemStorage(location=pathlib.PurePosixPath('/home/lucifer/join.istenith.com/media')), upload_to='resumes/', validators=[forms.models.file_size, django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'docx'])])),
                ('weakness', models.CharField(max_length=200, verbose_name='Weakness')),
                ('strength', models.CharField(blank=True, max_length=200, verbose_name='Strengths')),
                ('skills', models.CharField(blank=True, max_length=200, verbose_name='Skills')),
                ('why_join_iste', models.TextField(null=True, verbose_name='Why you want to join ISTE?')),
                ('expect_from_iste', models.TextField(null=True, verbose_name='What do you want from ISTE?')),
                ('terms_confirmed', models.BooleanField(verbose_name='Terms & Conditions')),
            ],
        ),
        migrations.CreateModel(
            name='Social_Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('link', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'Social Link',
                'verbose_name_plural': 'Social Links',
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_heading', models.CharField(blank=True, max_length=1000, null=True)),
                ('intro_text', models.CharField(blank=True, max_length=100000000, null=True)),
                ('about_para', models.CharField(blank=True, max_length=100000000, null=True)),
                ('download_para', models.CharField(blank=True, max_length=1000000, null=True)),
                ('download_cv_pdf', models.FileField(blank=True, null=True, upload_to='sample_pdf/')),
                ('download_cv_doc', models.FileField(blank=True, null=True, upload_to='sample_doc/')),
                ('contact_para', models.CharField(blank=True, max_length=10000000, null=True)),
                ('copyright_para', models.CharField(blank=True, max_length=10000000, null=True)),
                ('success_message', models.CharField(max_length=10000000, null=True)),
                ('Registeration_Closed', models.BooleanField(default=False)),
                ('show_results', models.BooleanField(default=False)),
                ('Registeration_Closed_Message', models.CharField(blank=True, max_length=10000000000, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Terms_n_Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('content', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'Terms & Condition',
                'verbose_name_plural': 'Terms & Conditions',
            },
        ),
    ]
